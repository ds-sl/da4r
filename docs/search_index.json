[["pop.html", "D Appendix E Population D.1 About: United States Census Bureau D.2 International Data Base (IDB) December 2020 Release (Now in 2021) D.3 Analysis using idbzip D.4 Population Pyramid", " D Appendix E Population Population Analysis using the UN Data and the US Census Bureau D.1 About: United States Census Bureau The Unites States of America Census Burea compiles a huge set of data. It provides data to the World Fact Book of Central Intelligence Agency and the Census Academy resources for Data Science Education. In alignment with the Digital Government Strategy, the Census Bureau is offering the public wider access to key U.S. statistics. (About) To study the population analysis of the world and its visualization, visit the following sites: Census Academy: https://www.census.gov/data/academy.html Infographics &amp; Visualizations: https://www.census.gov/library/visualizations.html U.S. and World Population Clock: https://www.census.gov/popclock/world Data Tool: https://www.census.gov/data-tools/demo/idb/#/country?YR_ANIM=2020 We can access to the data directly or by an API, Application Program Interface. In the following we study population data of the world in these two ways. D.2 International Data Base (IDB) December 2020 Release (Now in 2021) These data files correspond to the data available in the U.S. Census Bureau’s API. Each file is pipe “|” delimited, and the header row is demarcated with “#” at the start of the row. For additional technical specifications, including variable definitions, please visit https://www.census.gov/data/developers/data-sets/international-database.html For more information about the International Data Base, including release notes and detailed methodology, please visit https://www.census.gov/programs-surveys/international-programs/about/idb.html Variables: AGE: Single year of age from 0-100+ AREA_KM2: Area in square kilometers FIPS: FIPS country/area Code Federal Information Processing Standards for: Census API FIPS ‘for’ clause GENC: Geopolitical Entities, Names, and Codes (GENC) two character country code standard in: Census API FIPS ‘in’ clause NAME Country or area name POP: Total mid-year population SEX: Sex 0 = Both Sexes, 1 = Male, 2 = Female time: ISO-8601 Date/Time value ucgid Uniform Census Geography Identifier clause YR Year The file size is huge as a text file with about 8 million rows. (For Excel, the total number of rows on a worksheet is 1,048,576, about 1 million.) We need to download once but we should read the downloaded file instead of downloading it everytime. Commands in tidyverse package works very fast and we can handle the data of this size. Recently 2021 version was publishes: https://www.census.gov/data-tools/demo/idb/#/country?YR_ANIM=2021 New: https://www2.census.gov/programs-surveys/international-programs/about/idb/idbzip.zip Old: https://www2.census.gov/programs-surveys/international-programs/about/idb/idbzip.zip D.3 Analysis using idbzip library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ── ## ✔ ggplot2 3.3.6 ✔ purrr 0.3.4 ## ✔ tibble 3.1.8 ✔ dplyr 1.0.10 ## ✔ tidyr 1.2.1 ✔ stringr 1.4.1 ## ✔ readr 2.1.2 ✔ forcats 0.5.2 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ### For the first time, delete # in the following four lines to download the files. ## From the second time, add # to the following four lines to avoid downloading the files. # idbzip_url &lt;- &quot;https://www2.census.gov/programs-surveys/international-programs/about/idb/idbzip.zip&quot; # URL of the zip file. # dir.create(&quot;data/idbzip&quot;) # store everything in idbzip directory in the working directory # download.file(url = idbzip_url, destfile = &quot;data/idbzip/idbzip.zip&quot;) # file size: 43.1 MB # unzip(&quot;data/idbzip/idbzip.zip&quot;, exdir = &quot;data/idbzip&quot;) # zip file contains three files idb5yr.all, idbsingleyear.all, Readme.txt # idb &lt;- read_delim(&quot;data/idbzip/idbsingleyear.all&quot;, delim = &quot;|&quot;) # glimpse(idb) # idb Since it is too large, we chose 15 countries and stored it as data/idb15.csv and data/world.csv, which is the data of the world population. #idb %&gt;% # filter(GENC %in% c(&quot;BD&quot;, &quot;CH&quot;,&quot;DE&quot;,&quot;FR&quot;,&quot;GB&quot;,&quot;ID&quot;, &quot;IN&quot;,&quot;JP&quot;, &quot;KR&quot;,&quot;LK&quot;,&quot;MY&quot;, &quot;PH&quot;,&quot;TH&quot;,&quot;US&quot;,&quot;VN&quot;)) %&gt;% # select(&quot;YEAR&quot; = `#YR`, &quot;COUNTRY&quot; = NAME, &quot;ISO2&quot; = GENC, SEX, POP, AGE) %&gt;% # write_csv(&quot;data/idb15.csv&quot;) world_all &lt;- idb %&gt;% select(&quot;YEAR&quot; = `#YR`, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) world &lt;- world_all %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) world write_csv(world, &quot;data/world.csv&quot;) countries &lt;- idb %&gt;% select(&quot;YEAR&quot; = `#YR`, SEX, GENC, POP) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% filter(SEX == 0) %&gt;% group_by(YEAR, GENC) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ungroup() %&gt;% group_by(YEAR) %&gt;% summarize(NUMBER = n()) write_csv(countries, &quot;data/world2.csv&quot;) D.3.1 Popultion of the World world &lt;- read_csv(&quot;data/world.csv&quot;) ## Rows: 453 Columns: 3 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## dbl (3): YEAR, SEX, POPULATION ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. world2 &lt;- read_csv(&quot;data/world2.csv&quot;) ## Rows: 151 Columns: 2 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## dbl (2): YEAR, NUMBER ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. idb15 &lt;- read_csv(&quot;data/idb15.csv&quot;) ## Rows: 509343 Columns: 6 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (2): COUNTRY, ISO2 ## dbl (4): YEAR, SEX, POP, AGE ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. idb15 ## # A tibble: 509,343 × 6 ## YEAR COUNTRY ISO2 SEX POP AGE ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1981 Bangladesh BD 0 3428071 0 ## 2 1981 Bangladesh BD 0 3072594 1 ## 3 1981 Bangladesh BD 0 2888362 2 ## 4 1981 Bangladesh BD 0 2782738 3 ## 5 1981 Bangladesh BD 0 2719081 4 ## 6 1981 Bangladesh BD 0 2669809 5 ## 7 1981 Bangladesh BD 0 2614671 6 ## 8 1981 Bangladesh BD 0 2545849 7 ## 9 1981 Bangladesh BD 0 2462867 8 ## 10 1981 Bangladesh BD 0 2373595 9 ## # … with 509,333 more rows idb15 %&gt;% distinct(COUNTRY, ISO2) ## # A tibble: 15 × 2 ## COUNTRY ISO2 ## &lt;chr&gt; &lt;chr&gt; ## 1 Bangladesh BD ## 2 China CN ## 3 Germany DE ## 4 France FR ## 5 United Kingdom GB ## 6 Indonesia ID ## 7 India IN ## 8 Japan JP ## 9 Korea, South KR ## 10 Sri Lanka LK ## 11 Malaysia MY ## 12 Philippines PH ## 13 Thailand TH ## 14 United States US ## 15 Vietnam VN summary(idb15) ## YEAR COUNTRY ISO2 SEX ## Min. :1980 Length:509343 Length:509343 Min. :0 ## 1st Qu.:2014 Class :character Class :character 1st Qu.:0 ## Median :2042 Mode :character Mode :character Median :1 ## Mean :2042 Mean :1 ## 3rd Qu.:2070 3rd Qu.:2 ## Max. :2100 Max. :2 ## POP AGE ## Min. : 6 Min. : 0 ## 1st Qu.: 253533 1st Qu.: 25 ## Median : 516669 Median : 50 ## Mean : 1813595 Mean : 50 ## 3rd Qu.: 1329090 3rd Qu.: 75 ## Max. :30630618 Max. :100 world %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) Something is wrong! summary(world2) ## YEAR NUMBER ## Min. :1950 Min. : 2.0 ## 1st Qu.:1988 1st Qu.:113.5 ## Median :2025 Median :226.0 ## Mean :2025 Mean :173.3 ## 3rd Qu.:2062 3rd Qu.:227.0 ## Max. :2100 Max. :227.0 ggplot(world2, aes(x = YEAR, y = NUMBER)) + geom_bar(stat = &quot;identity&quot;) D.3.2 Population of a Country, JAPAN japan &lt;- filter(idb15, ISO2 == &quot;JP&quot;) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) japan ## # A tibble: 33,633 × 4 ## YEAR SEX POP AGE ## &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1990 0 1228598 0 ## 2 1990 0 1275792 1 ## 3 1990 0 1318661 2 ## 4 1990 0 1355679 3 ## 5 1990 0 1388504 4 ## 6 1990 0 1452576 5 ## 7 1990 0 1494424 6 ## 8 1990 0 1507634 7 ## 9 1990 0 1515567 8 ## 10 1990 0 1547527 9 ## # … with 33,623 more rows pop &lt;- japan %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. pop ## # A tibble: 333 × 3 ## # Groups: YEAR [111] ## YEAR SEX POPULATION ## &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 1990 0 123537399 ## 2 1990 1 60628417 ## 3 1990 2 62908982 ## 4 1991 0 123962538 ## 5 1991 1 60832741 ## 6 1991 2 63129797 ## 7 1992 0 124378689 ## 8 1992 1 61030495 ## 9 1992 2 63348194 ## 10 1993 0 124738157 ## # … with 323 more rows pop %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) japan2020 &lt;- japan %&gt;% filter(YEAR == 2020, SEX == 0) ggplot(japan2020) + geom_bar(aes(x = AGE, y = POP), stat = &quot;identity&quot;) japan_adult &lt;- filter(japan2020, AGE &gt;=18) ggplot(japan_adult) + geom_line(aes(x = AGE, y = cumsum(POP)/sum(POP)*100)) + geom_vline(xintercept = 40, color = &quot;red&quot;) D.4 Population Pyramid https://www.populationpyramid.net/world/2019/ ggplot2: https://rpubs.com/walkerke/pyramids_ggplot2 US Census: https://cran.r-project.org/web/packages/idbr/idbr.pdf https://cran.r-project.org/web/packages/idbr/index.html D.4.1 Population Pyramid of Japan or Other Countries D.4.1.1 Japan yr &lt;- 2020 country &lt;- &quot;Japan&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.2 Bangladesh yr &lt;- 2020 country &lt;- &quot;Bangladesh&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.3 China yr &lt;- 2020 country &lt;- &quot;China&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.4 Germany yr &lt;- 2020 country &lt;- &quot;Germany&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.5 France yr &lt;- 2020 country &lt;- &quot;France&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.6 United Kingdom yr &lt;- 2020 country &lt;- &quot;United Kingdom&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.7 Indonesia yr &lt;- 2020 country &lt;- &quot;Indonesia&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.8 India yr &lt;- 2020 country &lt;- &quot;India&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.9 Korea, South yr &lt;- 2020 country &lt;- &quot;Korea, South&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.10 Sri Lanka yr &lt;- 2020 country &lt;- &quot;Sri Lanka&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.11 Malaysia yr &lt;- 2020 country &lt;- &quot;Malaysia&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.12 Philippines yr &lt;- 2020 country &lt;- &quot;Philippines&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.13 Thailand yr &lt;- 2020 country &lt;- &quot;Thailand&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.14 United States yr &lt;- 2020 country &lt;- &quot;United States&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.15 Vietnam yr &lt;- 2020 country &lt;- &quot;Vietnam&quot; filter(idb15, COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = fct_recode(as_factor(SEX), &quot;Both Sex&quot; = &quot;0&quot;, &quot;Male&quot; = &quot;1&quot;, &quot;Female&quot; = &quot;2&quot;), POP = POP/1000) %&gt;% filter(YEAR == yr, SEX != &quot;Both Sex&quot;) %&gt;% ggplot(aes(x = AGE, y = ifelse(SEX == &quot;Male&quot;, -POP, POP), fill = SEX)) + geom_bar(stat = &quot;identity&quot;) + coord_flip() + labs(title = paste(&quot;Population Pyramid of&quot;, country, yr), subtitle = &quot;population unit in 1000&quot;) + scale_y_continuous(breaks = seq(-1000, 1000, 500), labels = as.character(c(1000, 500, 0, 500, 1000))) + ylab(&quot;Male vs Female&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) idb15 %&gt;% filter(COUNTRY == country) %&gt;% select(YEAR, SEX, POP, AGE) %&gt;% mutate(SEX = as_factor(SEX)) %&gt;% group_by(YEAR, SEX) %&gt;% summarize(POPULATION = sum(POP)) %&gt;% ggplot(aes(x = YEAR, y = POPULATION)) + geom_line(aes(color = SEX)) + geom_vline(xintercept = 2020) ## `summarise()` has grouped output by &#39;YEAR&#39;. You can override using the ## `.groups` argument. D.4.1.16 Project Try Other Countries or Regions Using CLASS.xlsx of United Nations End of Analysis "]]
